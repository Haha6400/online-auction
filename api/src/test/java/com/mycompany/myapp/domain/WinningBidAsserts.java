package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WinningBidAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWinningBidAllPropertiesEquals(WinningBid expected, WinningBid actual) {
        assertWinningBidAutoGeneratedPropertiesEquals(expected, actual);
        assertWinningBidAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWinningBidAllUpdatablePropertiesEquals(WinningBid expected, WinningBid actual) {
        assertWinningBidUpdatableFieldsEquals(expected, actual);
        assertWinningBidUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWinningBidAutoGeneratedPropertiesEquals(WinningBid expected, WinningBid actual) {
        assertThat(expected)
            .as("Verify WinningBid auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWinningBidUpdatableFieldsEquals(WinningBid expected, WinningBid actual) {
        assertThat(expected)
            .as("Verify WinningBid relevant properties")
            .satisfies(e -> assertThat(e.getPaymentStatus()).as("check paymentStatus").isEqualTo(actual.getPaymentStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWinningBidUpdatableRelationshipsEquals(WinningBid expected, WinningBid actual) {
        assertThat(expected)
            .as("Verify WinningBid relationships")
            .satisfies(e -> assertThat(e.getAuctionRoom()).as("check auctionRoom").isEqualTo(actual.getAuctionRoom()))
            .satisfies(e -> assertThat(e.getBid()).as("check bid").isEqualTo(actual.getBid()));
    }
}
