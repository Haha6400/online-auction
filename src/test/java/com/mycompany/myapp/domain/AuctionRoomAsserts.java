package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AuctionRoomAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuctionRoomAllPropertiesEquals(AuctionRoom expected, AuctionRoom actual) {
        assertAuctionRoomAutoGeneratedPropertiesEquals(expected, actual);
        assertAuctionRoomAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuctionRoomAllUpdatablePropertiesEquals(AuctionRoom expected, AuctionRoom actual) {
        assertAuctionRoomUpdatableFieldsEquals(expected, actual);
        assertAuctionRoomUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuctionRoomAutoGeneratedPropertiesEquals(AuctionRoom expected, AuctionRoom actual) {
        assertThat(expected)
            .as("Verify AuctionRoom auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuctionRoomUpdatableFieldsEquals(AuctionRoom expected, AuctionRoom actual) {
        assertThat(expected)
            .as("Verify AuctionRoom relevant properties")
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getStartTime()).as("check startTime").isEqualTo(actual.getStartTime()))
            .satisfies(e -> assertThat(e.getEndTime()).as("check endTime").isEqualTo(actual.getEndTime()))
            .satisfies(e -> assertThat(e.getInitPrice()).as("check initPrice").isEqualTo(actual.getInitPrice()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAuctionRoomUpdatableRelationshipsEquals(AuctionRoom expected, AuctionRoom actual) {}
}
